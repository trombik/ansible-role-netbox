---
# tasks file for ansible-role-netbox

- name: "Inlcude variables from {{ ansible_os_family }}.yml"
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Include install-{{ ansible_os_family }}.yml"
  include: "install-{{ ansible_os_family }}.yml"

- name: Create netbox_group
  ansible.builtin.group:
    name: "{{ netbox_group }}"

- name: Create netbox_user
  ansible.builtin.user:
    name: "{{ netbox_user }}"
    create_home: yes
    group: "{{ netbox_group }}"
    home: "{{ netbox_home_dir }}"

- name: Install netbox via git
  ansible.builtin.git:
    repo: "{{ netbox_git_repo }}"
    version: "{{ netbox_git_version }}"
    update: "{{ netbox_git_update }}"
    dest: "{{ netbox_root_dir }}"
  register: __netbox_install_netbox
  become: yes
  become_user: "{{ netbox_user }}"
  notify:
    - Restart netbox
    - Restart netbox_rq

- name: Install pip packages listed in requirements.txt
  ansible.builtin.pip:
    requirements: "{{ netbox_root_dir }}/requirements.txt"
    extra_args: ""
    virtualenv: "{{ netbox_venv_dir }}"
    virtualenv_command: "{{ ansible_python['executable'] }} -m venv"
  become: true
  become_user: "{{ netbox_user }}"
  notify:
    - Restart netbox
    - Restart netbox_rq

- name: Create local_requirements.txt
  ansible.builtin.template:
    src: local_requirements.txt.j2
    dest: "{{ netbox_root_dir }}/local_requirements.txt"
    mode: "0644"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
  become: true
  become_user: "{{ netbox_user }}"
  notify:
    - Restart netbox
    - Restart netbox_rq

- name: Install pip packages listed in local_requirements.txt
  ansible.builtin.pip:
    requirements: "{{ netbox_root_dir }}/local_requirements.txt"
    extra_args: ""
    virtualenv: "{{ netbox_venv_dir }}"
    virtualenv_command: "{{ ansible_python['executable'] }} -m venv"
  register: __netbox_register_local_requirements
  become: true
  become_user: "{{ netbox_user }}"
  notify:
    - Restart netbox
    - Restart netbox_rq

- name: Create netbox_log_dir
  ansible.builtin.file:
    path: "{{ netbox_log_dir }}"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: "0755"
    state: directory
  notify: Restart netbox

- name: Create configuration.py
  ansible.builtin.template:
    src: configuration.py.j2
    dest: "{{ netbox_conf_file }}"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: '0640'
    validate: "{{ ansible_python['executable'] }} -m py_compile %s"
  notify:
    - Restart netbox
    - Restart netbox_rq

- name: Create netbox_static_dir
  ansible.builtin.file:
    path: "{{ netbox_static_dir }}"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: '0755'
    state: directory

- name: Wait for redis server (tasks)
  ansible.builtin.wait_for:
    host: "{{ netbox_redis_tasks_host }}"
    port: "{{ netbox_redis_tasks_port }}"
    delay: "{{ netbox_redis_wait_for_delay }}"
    sleep: "{{ netbox_redis_wait_for_sleep }}"

- name: Wait for redis server (caching)
  ansible.builtin.wait_for:
    host: "{{ netbox_redis_caching_host }}"
    port: "{{ netbox_redis_caching_port }}"
    delay: "{{ netbox_redis_wait_for_delay }}"
    sleep: "{{ netbox_redis_wait_for_sleep }}"

- name: Wait for postgresql
  ansible.builtin.wait_for:
    host: "{{ netbox_db_host }}"
    port: "{{ netbox_db_port }}"
    delay: "{{ netbox_db_wait_for_delay }}"
    sleep: "{{ netbox_db_wait_for_sleep }}"

- name: Include init-netbox.yml
  include: init-netbox.yml
  when:
    - __netbox_install_netbox['changed']

- name: Do migrate when local_requirements changed
  community.general.django_manage:
    app_path: "{{ netbox_app_dir }}"
    virtualenv: "{{ netbox_venv_dir }}"
    command: migrate
  become: yes
  become_user: "{{ netbox_user }}"
  notify:
    - Restart netbox
  when:
    - __netbox_register_local_requirements['changed']

- name: Do collectstatic when local_requirements changed
  community.general.django_manage:
    app_path: "{{ netbox_app_dir }}"
    virtualenv: "{{ netbox_venv_dir }}"
    command: collectstatic
  become: yes
  become_user: "{{ netbox_user }}"
  notify:
    - Restart netbox
  when:
    - __netbox_register_local_requirements['changed']

- name: Start netbox
  ansible.builtin.service:
    name: "{{ netbox_service }}"
    state: started

- name: Start netbox_rq
  ansible.builtin.service:
    name: "{{ netbox_service_rq }}"
    state: started

- name: Wait for netbox
  ansible.builtin.wait_for:
    host: "{{ netbox_bind_address }}"
    port: "{{ netbox_bind_port }}"
    delay: "{{ netbox_wait_for_delay }}"
    sleep: "{{ netbox_wait_for_sleep }}"
